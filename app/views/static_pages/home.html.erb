<% content_for :head do %>
    <%= stylesheet_link_tag 'tennis-map', media: 'all', 'data-turbolinks-track': 'reload'%>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js"
            charset="utf-8"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js" charset="utf-8"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-mapael/2.2.0/js/jquery.mapael.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-mapael/2.2.0/js/maps/world_countries.js"></script>
    <%= javascript_pack_tag 'home/application' %> 
<% end %>
<% content_for :topImage do %>
    <div class="top-image">
        <p class="app-title p-3">
            ATP ツアーの試合状況をチェックできます
        </p>
    </div>
<% end %>
<% if logged_in? %>
    <div>
        <div class="text-success text-center m-5">
            <h2>お気に入り選手の直近の試合</h2>
        </div>
        <% if @favorite_players_and_recently_matches.length == 0 %> <!-- クエリが発行されない -->
            <div class="text-center">お気に入り選手が登録されていません</div>
        <% else %>
            <%= render partial:"players/player", collection: @favorite_players_and_recently_matches %>
        <% end %>
    </div>
<% end %>
<br>
<div class="container">
    <div class="row">
        <div class="col-12 mb-4 p-4 text-center">
            <h4 >お気に入り選手の<br>試合日程</h4>
            <%= image_tag("heart3.png", class: "img-fluid explation_img") %>
            <div>
                お気に入り選手を登録すれば，試合日程をトップページからすぐ確認できます．
                ライン連携をすれば，試合開始前に通知が届きます．試合終了時に通知はしないので，
                結果は後からじっくり自分で確認したい人におすすめです！
            </div>
        </div>
        <div class="col-12 mb-4 p-4 text-center">
            <h4>ATPツアーを巡り<br>旅行気分に</h4>
            <%= image_tag("earth.png", class: "img-fluid explation_img") %>
            <div>
                大会の詳細ページでは，現地のwebカメラ映像をチェックできます．
                ライン連携をすれば，大会直前に現地のwebカメラ映像などが届きます．
            </div>
        </div>
        <div class="col-12 mb-4 p-4 text-center">
            <h4>過去の試合結果を<br>検索可能</h4>
            <%= image_tag("search.png", class: "img-fluid explation_img") %>
            <br>
            大会や選手の過去の試合結果を検索できます．
        </div>
    </div>
</div>
<div class="row justify-content-center m-5">
    <div class="text-success text-center m-5">
        <h2>選手や大会名を入力</h2>
    </div>
    <div class="text-center col-12 col-md-8 col-lg-7">
        <%= render 'shared/name_search_form' %>
    </div>
</div>
<br>
<div class="text-success text-center m-5">
    <h2>地図で大会を探す</h2>
</div>


<div id="map-info">
    <div class="loader">Loading...</div>
</div>
<!--
<div id="tournament-info">
    <div class="container">
        <div class="row">
            <div class="col-12 mb-3 p-2 accordion" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        全米オープン
                    </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Accordion Item #2
                    </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Accordion Item #3
                    </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 mb-3 p-2 accordion" id="accordionExample2">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne2" aria-expanded="true" aria-controls="collapseOne2">
                        Accordion Item #1
                    </button>
                    </h2>
                    <div id="collapseOne2" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample2">
                        <div class="accordion-body">
                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo2" aria-expanded="false" aria-controls="collapseTwo2">
                        Accordion Item #2
                    </button>
                    </h2>
                    <div id="collapseTwo2" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample2">
                        <div class="accordion-body">
                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree2" aria-expanded="false" aria-controls="collapseThree2">
                        Accordion Item #3
                    </button>
                    </h2>
                    <div id="collapseThree2" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample2">
                        <div class="accordion-body">
                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
-->